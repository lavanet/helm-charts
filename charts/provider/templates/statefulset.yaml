{{- range $chain := $.Values.chains }}
{{- if and $chain.persistence $chain.persistence.enabled }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name:  {{ include "provider.fullname" $ }}-{{ $chain.name | lower }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "provider.labels" $ | nindent 4 }}
    app.lavanet.io/chain: {{ $chain.name | lower }}
spec:
  replicas: {{ $.Values.replicaCount }}
  serviceName: {{ $chain.name | lower }}-{{ include "provider.fullname" $ }}
  updateStrategy:
    type: {{ $.Values.statefulSetUpdate.updateStrategy }}
  podManagementPolicy: "Parallel"
  selector:
    matchLabels:
      {{- include "provider.selectorLabels" $ | nindent 6 }}
      app.lavanet.io/chain: {{ $chain.name | lower }}
  template:
    metadata:
      annotations:
        {{- with $.Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if not $chain.existingConfigSecret }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") $ | sha256sum }}
        {{- end }}
      labels:
        {{- include "provider.selectorLabels" $ | nindent 8 }}
        app.lavanet.io/chain: {{ $chain.name | lower }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "provider.serviceAccountName" $ }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: import-keys
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          command: ["sh", "-c"]
          args:
            - |
              if [ -f /lava/.key-{{ $.Values.wallet }}.imported ]; then
                echo "Key {{ $.Values.wallet }} has already been exported, exiting..."
                exit 0
              fi

              echo $KEY_PASSWORD | lavap keys \
              import {{ $.Values.wallet }} /tmp/keyfile/{{ $.Values.key.secretKey }} \
              --keyring-backend {{ $.Values.keyringBackend }}

              touch /lava/.key-{{ $.Values.wallet }}.imported
          env:
            - name: KEY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.key.passwordSecretName }}
                  key: {{ $.Values.key.passwordSecretKey }}
          volumeMounts:
            - name: "private-key-volume"
              mountPath: /tmp/keyfile/{{ $.Values.key.secretKey }}
              subPath: {{ $.Values.key.secretKey }}
              readOnly: true
            - mountPath: "/lava"
              name: data
      containers:
        - name: {{ $.Chart.Name }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          args:
            - "rpcprovider"
            {{- if $chain.existingConfigSecret }}
            - {{ $chain.existingConfigSecretKey }}
            {{- else }}
            - config.yml
            {{- end }}
            - --node
            - {{ $.Values.node }}
            - --from
            - {{ $.Values.wallet }}
            - --keyring-backend
            - {{ $.Values.keyringBackend }}
            - --chain-id
            - {{ $.Values.chainId }}
            - --geolocation
            - {{ $.Values.geolocation | quote }}
            - --shard-id
            - "$(MY_POD_INDEX)"
            {{- if $.Values.cache.enabled }}
            - --cache-be
            - {{ $.Values.cache.address }}
            {{- end }}
            - --log_level
            - {{ $.Values.log.level }}
            - --log_format
            - {{ $.Values.log.format }}
            {{- range $i, $val := $.Values.additionalArgs }}
            - {{ $val | quote }}
            {{- end }}
          env:
            - name: MY_POD_INDEX
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['apps.kubernetes.io/pod-index']
          ports:
            - name: grpc
              containerPort: {{ $.Values.service.port }}
              protocol: TCP
          {{- if $.Values.metrics.enabled }}
            - name: metrics
              containerPort: {{ $.Values.metrics.port }}
              protocol: TCP
          {{- end }}
          livenessProbe:
            httpGet:
              path: /lava/health
              port: grpc
              scheme: {{ $.Values.livenessProbe.scheme }}
            initialDelaySeconds: {{ $.Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ $.Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ $.Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ $.Values.livenessProbe.successThreshold }}
            failureThreshold: {{ $.Values.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /lava/health
              port: grpc
              scheme: {{ $.Values.livenessProbe.scheme }}
            initialDelaySeconds: {{ $.Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ $.Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ $.Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ $.Values.readinessProbe.successThreshold }}
            failureThreshold: {{ $.Values.readinessProbe.failureThreshold }}
          volumeMounts:
            - mountPath: "/lava"
              name: data
            - mountPath: "/lava/config/config.yml"
              subPath: config.yml
              name: {{ $chain.name | lower }}-config
              readOnly: true
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
      volumes:
        - name: {{ $chain.name | lower }}-config
          secret:
            {{- if $chain.existingConfigSecret }}
            secretName: {{ $chain.existingConfigSecret }}
            {{- else }}
            secretName: {{ include "provider.fullname" $ }}-{{ $chain.name | lower }}
            {{- end }}
        - name: "private-key-volume"
          secret:
            secretName: {{ $.Values.key.secretName }}
            optional: false
        - name: data
          {{- if $chain.persistence }}
          {{- if $chain.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "provider.fullname" $ }}-{{ $chain.name | lower }}
          {{- else }}
          emptyDir: {}
          {{- end }}
          {{- end }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}
